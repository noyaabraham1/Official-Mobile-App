name: Final Working Besmi Android Build

on:
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'  
        java-version: '17'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y imagemagick
      
    - name: Create project
      run: |
        mkdir besmi-app
        cd besmi-app
        
        # Simple package.json
        cat > package.json << 'EOF'
        {
          "name": "besmi-app",
          "version": "1.0.0",
          "dependencies": {
            "@capacitor/android": "^5.7.0",
            "@capacitor/cli": "^5.7.0",
            "@capacitor/core": "^5.7.0"
          }
        }
        EOF
        
        npm install
        
        # Capacitor config - SIMPLE local app
        cat > capacitor.config.json << 'EOF'
        {
          "appId": "com.besmi.app",
          "appName": "Besmi",
          "webDir": "www"
        }
        EOF
        
        # Create web directory
        mkdir -p www
        
        # Simple HTML that works reliably
        cat > www/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Besmi</title>
            <style>
                * { margin: 0; padding: 0; box-sizing: border-box; }
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
                    background: white;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    min-height: 100vh;
                    padding: 20px;
                }
                .container {
                    text-align: center;
                    max-width: 400px;
                    width: 100%;
                }
                .logo {
                    width: 120px;
                    height: 120px;
                    background: white;
                    border: 4px solid #f0f0f0;
                    border-radius: 28px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    font-size: 60px;
                    font-weight: 900;
                    color: #000;
                    margin: 0 auto 32px;
                    box-shadow: 0 8px 24px rgba(0,0,0,0.12);
                }
                h1 {
                    font-size: 36px;
                    margin-bottom: 12px;
                    color: #1a1a1a;
                    font-weight: 700;
                }
                .tagline {
                    font-size: 18px;
                    color: #666;
                    margin-bottom: 48px;
                    line-height: 1.4;
                }
                .button {
                    background: #007AFF;
                    color: white;
                    border: none;
                    padding: 16px 32px;
                    border-radius: 12px;
                    font-size: 18px;
                    font-weight: 600;
                    cursor: pointer;
                    width: 100%;
                    max-width: 280px;
                    transition: all 0.2s;
                }
                .button:hover {
                    background: #0056b3;
                    transform: translateY(-1px);
                }
                .status {
                    margin-top: 24px;
                    color: #888;
                    font-size: 14px;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="logo">B</div>
                <h1>Besmi</h1>
                <p class="tagline">Professional Lash Booking Platform</p>
                
                <button class="button" onclick="openPlatform()">
                    Open Besmi Platform
                </button>
                
                <div class="status" id="status">
                    Tap the button above to access your platform
                </div>
            </div>
            
            <script>
                function openPlatform() {
                    document.getElementById('status').textContent = 'Opening platform...';
                    
                    // Use multiple methods to ensure it works
                    setTimeout(() => {
                        try {
                            // Method 1: Direct navigation
                            window.location.href = 'https://besmi.replit.app';
                        } catch (e) {
                            // Method 2: Window open with system flag
                            try {
                                window.open('https://besmi.replit.app', '_system');
                            } catch (e2) {
                                // Method 3: Fallback
                                document.getElementById('status').textContent = 'Please open besmi.replit.app in your browser';
                            }
                        }
                    }, 500);
                }
                
                // Optional: Auto-open after 3 seconds
                setTimeout(() => {
                    const button = document.querySelector('.button');
                    if (button) {
                        button.style.background = '#28a745';
                        button.textContent = 'Auto-opening in 3...';
                        setTimeout(() => {
                            button.textContent = 'Auto-opening in 2...';
                            setTimeout(() => {
                                button.textContent = 'Auto-opening in 1...';
                                setTimeout(() => {
                                    openPlatform();
                                }, 1000);
                            }, 1000);
                        }, 1000);
                    }
                }, 2000);
            </script>
        </body>
        </html>
        EOF
        
        echo "Project created successfully"
        
    - name: Setup Android and create simple icons
      run: |
        cd besmi-app
        
        # Add Android platform
        npx cap add android
        
        # Create a simple PNG icon directly (more reliable than SVG conversion)
        cat > create_icon.py << 'EOF'
        from PIL import Image, ImageDraw, ImageFont
        import os
        
        def create_icon(size, filename):
            # Create white background with rounded corners
            img = Image.new('RGBA', (size, size), (255, 255, 255, 255))
            draw = ImageDraw.Draw(img)
            
            # Add subtle border
            border_width = max(1, size // 40)
            draw.rectangle([border_width, border_width, size-border_width, size-border_width], 
                          outline=(240, 240, 240, 255), width=border_width)
            
            # Add the "B" text
            font_size = size // 2
            try:
                # Try to use a system font
                font = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf", font_size)
            except:
                # Fallback to default font
                font = ImageFont.load_default()
            
            # Get text size and center it
            text = "B"
            bbox = draw.textbbox((0, 0), text, font=font)
            text_width = bbox[2] - bbox[0]
            text_height = bbox[3] - bbox[1]
            
            x = (size - text_width) // 2
            y = (size - text_height) // 2 - font_size // 8  # Adjust for visual centering
            
            # Draw the text
            draw.text((x, y), text, fill=(0, 0, 0, 255), font=font)
            
            # Save the image
            img.save(filename, 'PNG')
            print(f"Created {filename} ({size}x{size})")
        
        # Create all required icon sizes
        sizes_and_paths = [
            (48, "android/app/src/main/res/mipmap-mdpi/ic_launcher.png"),
            (72, "android/app/src/main/res/mipmap-hdpi/ic_launcher.png"),
            (96, "android/app/src/main/res/mipmap-xhdpi/ic_launcher.png"),
            (144, "android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png"),
            (192, "android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png"),
            (48, "android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png"),
            (72, "android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png"),
            (96, "android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png"),
            (144, "android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png"),
            (192, "android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png"),
        ]
        
        for size, path in sizes_and_paths:
            os.makedirs(os.path.dirname(path), exist_ok=True)
            create_icon(size, path)
        
        print("All icons created successfully!")
        EOF
        
        # Install PIL and create icons
        pip install Pillow
        python create_icon.py
        
        # Verify icons were created
        echo "Checking created icons:"
        find android/app/src/main/res -name "ic_launcher*" -type f
        
        echo "Icons setup completed"
        
    - name: Configure Android app
      run: |
        cd besmi-app
        
        # Update AndroidManifest.xml with proper permissions
        cat > android/app/src/main/AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
            <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
            
            <application
                android:allowBackup="true"
                android:icon="@mipmap/ic_launcher"
                android:label="@string/app_name"
                android:roundIcon="@mipmap/ic_launcher_round"
                android:theme="@style/AppTheme"
                android:usesCleartextTraffic="true"
                android:networkSecurityConfig="@xml/network_security_config">
                
                <activity
                    android:name=".MainActivity"
                    android:exported="true"
                    android:launchMode="singleTask"
                    android:theme="@style/AppTheme.NoActionBarLaunch">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>
            </application>
        </manifest>
        EOF
        
        # Create network security config
        mkdir -p android/app/src/main/res/xml
        cat > android/app/src/main/res/xml/network_security_config.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <network-security-config>
            <domain-config cleartextTrafficPermitted="true">
                <domain includeSubdomains="true">besmi.replit.app</domain>
                <domain includeSubdomains="true">replit.app</domain>
            </domain-config>
        </network-security-config>
        EOF
        
        # Update strings.xml
        cat > android/app/src/main/res/values/strings.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <string name="app_name">Besmi</string>
            <string name="title_activity_main">Besmi</string>
            <string name="package_name">com.besmi.app</string>
            <string name="custom_url_scheme">besmi</string>
        </resources>
        EOF
        
        echo "Android configuration completed"
        
    - name: Manual asset placement and build
      run: |
        cd besmi-app
        
        # Create assets directory and copy HTML
        mkdir -p android/app/src/main/assets/public
        cp www/index.html android/app/src/main/assets/public/
        
        echo "Assets placed manually"
        ls -la android/app/src/main/assets/public/
        
        # Sync Capacitor
        npx cap sync android
        
        # Build APK
        cd android
        chmod +x gradlew
        ./gradlew assembleDebug --no-daemon --stacktrace
        
        echo "APK built successfully"
        ls -la app/build/outputs/apk/debug/
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: besmi-working-apk
        path: besmi-app/android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Success summary
      run: |
        echo "✅ Besmi APK build completed successfully"
        echo "✅ Custom black B logo icons created with Python/PIL"
        echo "✅ User-controlled platform access (tap button to open)"
        echo "✅ Enhanced network permissions and security config"
        echo "✅ Manual asset placement ensures HTML loads properly"
