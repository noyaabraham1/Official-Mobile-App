name: Native WebView Besmi Android Build

on:
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'  
        java-version: '17'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y imagemagick
      
    - name: Create project
      run: |
        mkdir besmi-app
        cd besmi-app
        
        # Package.json with Browser plugin for in-app browsing
        cat > package.json << 'EOF'
        {
          "name": "besmi-app",
          "version": "1.0.0",
          "dependencies": {
            "@capacitor/android": "^5.7.0",
            "@capacitor/cli": "^5.7.0",
            "@capacitor/core": "^5.7.0",
            "@capacitor/browser": "^5.7.0"
          }
        }
        EOF
        
        npm install
        
        # Capacitor config for embedded webview pointing to besmi.com/auth
        cat > capacitor.config.json << 'EOF'
        {
          "appId": "com.besmi.app",
          "appName": "Besmi",
          "webDir": "www",
          "server": {
            "url": "https://besmi.com/auth",
            "cleartext": true
          },
          "plugins": {
            "Browser": {
              "presentationStyle": "fullscreen"
            }
          }
        }
        EOF
        
        # Create minimal web directory (fallback only)
        mkdir -p www
        
        # Fallback HTML in case server connection fails
        cat > www/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Besmi</title>
            <style>
                * { margin: 0; padding: 0; box-sizing: border-box; }
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
                    background: white;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    min-height: 100vh;
                    padding: 20px;
                }
                .container {
                    text-align: center;
                    max-width: 400px;
                    width: 100%;
                }
                .logo {
                    width: 120px;
                    height: 120px;
                    background: white;
                    border: 4px solid #f0f0f0;
                    border-radius: 28px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    font-size: 60px;
                    font-weight: 900;
                    color: #000;
                    margin: 0 auto 32px;
                    box-shadow: 0 8px 24px rgba(0,0,0,0.12);
                }
                h1 {
                    font-size: 36px;
                    margin-bottom: 12px;
                    color: #1a1a1a;
                    font-weight: 700;
                }
                .tagline {
                    font-size: 18px;
                    color: #666;
                    margin-bottom: 32px;
                    line-height: 1.4;
                }
                .status {
                    color: #888;
                    font-size: 16px;
                    margin-bottom: 24px;
                }
                .spinner {
                    width: 40px;
                    height: 40px;
                    border: 4px solid #f0f0f0;
                    border-top: 4px solid #007AFF;
                    border-radius: 50%;
                    animation: spin 1s linear infinite;
                    margin: 0 auto 24px;
                }
                @keyframes spin {
                    0% { transform: rotate(0deg); }
                    100% { transform: rotate(360deg); }
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="logo">B</div>
                <h1>Besmi</h1>
                <p class="tagline">Professional Lash Booking Platform</p>
                
                <div class="spinner"></div>
                <div class="status">Connecting to besmi.com...</div>
            </div>
            
            <script>
                // This will only show if the main server connection fails
                setTimeout(() => {
                    window.location.reload();
                }, 5000);
            </script>
        </body>
        </html>
        EOF
        
        echo "Project created successfully"
        
    - name: Setup Android and create icons
      run: |
        cd besmi-app
        
        # Add Android platform
        npx cap add android
        
        # Create icon using Python (most reliable method)
        cat > create_icon.py << 'EOF'
        from PIL import Image, ImageDraw, ImageFont
        import os
        
        def create_icon(size, filename):
            # Create white background
            img = Image.new('RGBA', (size, size), (255, 255, 255, 255))
            draw = ImageDraw.Draw(img)
            
            # Add subtle border
            border_width = max(2, size // 30)
            draw.rectangle([border_width, border_width, size-border_width, size-border_width], 
                          outline=(240, 240, 240, 255), width=border_width)
            
            # Add the "B" text
            font_size = size // 2
            try:
                font = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf", font_size)
            except:
                font = ImageFont.load_default()
            
            # Center the text
            text = "B"
            bbox = draw.textbbox((0, 0), text, font=font)
            text_width = bbox[2] - bbox[0]
            text_height = bbox[3] - bbox[1]
            
            x = (size - text_width) // 2
            y = (size - text_height) // 2 - font_size // 10
            
            # Draw the text
            draw.text((x, y), text, fill=(0, 0, 0, 255), font=font)
            
            # Save the image
            os.makedirs(os.path.dirname(filename), exist_ok=True)
            img.save(filename, 'PNG')
            print(f"Created {filename} ({size}x{size})")
        
        # Create all icon sizes
        icon_configs = [
            (48, "android/app/src/main/res/mipmap-mdpi/ic_launcher.png"),
            (72, "android/app/src/main/res/mipmap-hdpi/ic_launcher.png"),
            (96, "android/app/src/main/res/mipmap-xhdpi/ic_launcher.png"),
            (144, "android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png"),
            (192, "android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png"),
            (48, "android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png"),
            (72, "android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png"),
            (96, "android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png"),
            (144, "android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png"),
            (192, "android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png"),
        ]
        
        for size, path in icon_configs:
            create_icon(size, path)
        
        print("All icons created successfully!")
        EOF
        
        # Install PIL and create icons
        pip install Pillow
        python create_icon.py
        
        echo "Icons setup completed"
        
    - name: Configure Android for embedded webview
      run: |
        cd besmi-app
        
        # Enhanced AndroidManifest.xml for webview app
        cat > android/app/src/main/AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
            <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
            
            <application
                android:allowBackup="true"
                android:icon="@mipmap/ic_launcher"
                android:label="@string/app_name"
                android:roundIcon="@mipmap/ic_launcher_round"
                android:theme="@style/AppTheme"
                android:usesCleartextTraffic="true"
                android:hardwareAccelerated="true">
                
                <activity
                    android:name=".MainActivity"
                    android:exported="true"
                    android:launchMode="singleTask"
                    android:theme="@style/AppTheme.NoActionBarLaunch"
                    android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|smallestScreenSize|screenLayout|uiMode"
                    android:resizeableActivity="false">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>
            </application>
        </manifest>
        EOF
        
        # Configure strings
        cat > android/app/src/main/res/values/strings.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <string name="app_name">Besmi</string>
            <string name="title_activity_main">Besmi</string>
            <string name="package_name">com.besmi.app</string>
        </resources>
        EOF
        
        echo "Android configuration completed"
        
    - name: Build native webview APK
      run: |
        cd besmi-app
        
        # Sync Capacitor with server URL configuration
        npx cap sync android
        
        echo "Capacitor sync completed with server URL"
        
        # Build APK
        cd android
        chmod +x gradlew
        ./gradlew assembleDebug --no-daemon --stacktrace
        
        echo "APK built successfully"
        ls -la app/build/outputs/apk/debug/
      
    - name: Upload native webview APK
      uses: actions/upload-artifact@v4
      with:
        name: besmi-native-webview-apk
        path: besmi-app/android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Success summary
      run: |
        echo "✅ Native WebView Besmi app completed"
        echo "✅ App loads https://besmi.com/auth INSIDE the app"
        echo "✅ No external browser - stays within the app"
        echo "✅ Custom black B logo icon created"
        echo "✅ Users directed to login/signup page immediately"
