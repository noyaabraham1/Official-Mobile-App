name: Build Besmi Android APK - Network Fixed

on:
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'  
        java-version: '17'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y imagemagick
      
    - name: Create project
      run: |
        mkdir besmi-app
        cd besmi-app
        
        # Simple package.json
        cat > package.json << 'EOF'
        {
          "name": "besmi-app",
          "version": "1.0.0",
          "dependencies": {
            "@capacitor/android": "^5.7.0",
            "@capacitor/cli": "^5.7.0",
            "@capacitor/core": "^5.7.0"
          }
        }
        EOF
        
        npm install
        
        # Capacitor config with NO server URL - local app only
        cat > capacitor.config.json << 'EOF'
        {
          "appId": "com.besmi.app",
          "appName": "Besmi",
          "webDir": "www"
        }
        EOF
        
        # Create web directory with enhanced HTML
        mkdir -p www
        
        # Enhanced HTML with better network handling
        cat > www/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Besmi</title>
            <meta http-equiv="Content-Security-Policy" content="default-src 'self' https://besmi.replit.app 'unsafe-inline'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';">
            <style>
                body {
                    margin: 0;
                    padding: 0;
                    background: white;
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    height: 100vh;
                }
                .container {
                    text-align: center;
                    padding: 40px;
                    max-width: 400px;
                }
                .logo {
                    width: 100px;
                    height: 100px;
                    background: white;
                    border: 3px solid #f0f0f0;
                    border-radius: 24px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    font-size: 50px;
                    font-weight: bold;
                    color: black;
                    margin: 0 auto 24px;
                    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
                }
                h1 {
                    font-size: 32px;
                    margin-bottom: 8px;
                    color: #1a1a1a;
                    font-weight: 700;
                }
                .tagline {
                    font-size: 16px;
                    color: #666;
                    margin-bottom: 32px;
                }
                .status {
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 12px;
                    color: #888;
                    margin-bottom: 20px;
                }
                .spinner {
                    width: 20px;
                    height: 20px;
                    border: 2px solid #f0f0f0;
                    border-top: 2px solid #333;
                    border-radius: 50%;
                    animation: spin 1s linear infinite;
                }
                @keyframes spin {
                    0% { transform: rotate(0deg); }
                    100% { transform: rotate(360deg); }
                }
                .button {
                    background: #007AFF;
                    color: white;
                    border: none;
                    padding: 12px 24px;
                    border-radius: 8px;
                    font-size: 16px;
                    font-weight: 600;
                    cursor: pointer;
                    margin: 8px;
                    min-width: 120px;
                }
                .button:hover {
                    background: #0056b3;
                }
                .button.secondary {
                    background: #f8f9fa;
                    color: #333;
                    border: 1px solid #ddd;
                }
                .error {
                    color: #dc3545;
                    margin-top: 16px;
                    font-size: 14px;
                }
                .success {
                    color: #28a745;
                    margin-top: 16px;
                    font-size: 14px;
                }
                .hidden {
                    display: none;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="logo">B</div>
                <h1>Besmi</h1>
                <p class="tagline">Professional Lash Booking Platform</p>
                
                <div id="loading" class="status">
                    <div class="spinner"></div>
                    <span>Opening platform...</span>
                </div>
                
                <div id="error" class="hidden">
                    <p class="error">Connection issue detected</p>
                    <button class="button" onclick="openInBrowser()">Open in Browser</button>
                    <button class="button secondary" onclick="retryConnection()">Retry</button>
                </div>
                
                <div id="success" class="hidden">
                    <p class="success">Redirecting to Besmi platform...</p>
                </div>
            </div>
            
            <script>
                let retryCount = 0;
                const maxRetries = 3;
                const platformUrl = 'https://besmi.replit.app';
                
                function showError() {
                    document.getElementById('loading').classList.add('hidden');
                    document.getElementById('error').classList.remove('hidden');
                }
                
                function showSuccess() {
                    document.getElementById('loading').classList.add('hidden');
                    document.getElementById('success').classList.remove('hidden');
                }
                
                function openInBrowser() {
                    // Try multiple methods to open in browser
                    if (window.open) {
                        window.open(platformUrl, '_system');
                    } else {
                        window.location.href = platformUrl;
                    }
                }
                
                function retryConnection() {
                    document.getElementById('error').classList.add('hidden');
                    document.getElementById('loading').classList.remove('hidden');
                    
                    setTimeout(() => {
                        attemptRedirect();
                    }, 1000);
                }
                
                function attemptRedirect() {
                    // Test network connectivity first
                    fetch(platformUrl, { 
                        method: 'HEAD', 
                        mode: 'no-cors',
                        cache: 'no-cache'
                    })
                    .then(() => {
                        showSuccess();
                        setTimeout(() => {
                            window.location.href = platformUrl;
                        }, 1000);
                    })
                    .catch(() => {
                        retryCount++;
                        if (retryCount < maxRetries) {
                            setTimeout(() => {
                                attemptRedirect();
                            }, 2000);
                        } else {
                            showError();
                        }
                    });
                }
                
                // Start the process
                setTimeout(() => {
                    attemptRedirect();
                }, 1500);
            </script>
        </body>
        </html>
        EOF
        
        echo "Project created successfully"
        
    - name: Setup Android and icons
      run: |
        cd besmi-app
        
        # Add Android platform
        npx cap add android
        
        # Create high-quality logo matching your brand
        cat > logo.svg << 'EOF'
        <svg width="512" height="512" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
              <feDropShadow dx="0" dy="2" stdDeviation="4" flood-color="rgba(0,0,0,0.1)"/>
            </filter>
          </defs>
          <rect width="512" height="512" rx="120" fill="white" stroke="#f0f0f0" stroke-width="2" filter="url(#shadow)"/>
          <text x="256" y="360" font-family="system-ui, -apple-system, Arial, sans-serif" font-size="280" font-weight="900" text-anchor="middle" fill="#000000">B</text>
        </svg>
        EOF
        
        # Generate all icon sizes with high quality
        convert logo.svg -background white -flatten -resize 48x48 android/app/src/main/res/mipmap-mdpi/ic_launcher.png
        convert logo.svg -background white -flatten -resize 72x72 android/app/src/main/res/mipmap-hdpi/ic_launcher.png
        convert logo.svg -background white -flatten -resize 96x96 android/app/src/main/res/mipmap-xhdpi/ic_launcher.png
        convert logo.svg -background white -flatten -resize 144x144 android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
        convert logo.svg -background white -flatten -resize 192x192 android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
        
        # Round icons (circular versions)
        convert logo.svg -background white -flatten -resize 48x48 \( +clone -threshold 101% -fill white -draw 'circle 24,24 24,0' \) -alpha off -compose copy_opacity -composite android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png
        convert logo.svg -background white -flatten -resize 72x72 \( +clone -threshold 101% -fill white -draw 'circle 36,36 36,0' \) -alpha off -compose copy_opacity -composite android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png
        convert logo.svg -background white -flatten -resize 96x96 \( +clone -threshold 101% -fill white -draw 'circle 48,48 48,0' \) -alpha off -compose copy_opacity -composite android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
        convert logo.svg -background white -flatten -resize 144x144 \( +clone -threshold 101% -fill white -draw 'circle 72,72 72,0' \) -alpha off -compose copy_opacity -composite android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
        convert logo.svg -background white -flatten -resize 192x192 \( +clone -threshold 101% -fill white -draw 'circle 96,96 96,0' \) -alpha off -compose copy_opacity -composite android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
        
        # Adaptive icons for modern Android (API 26+)
        mkdir -p android/app/src/main/res/mipmap-anydpi-v26
        
        # Foreground layer (just the B)
        cat > android/app/src/main/res/drawable/ic_launcher_foreground.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="108dp"
            android:height="108dp"
            android:viewportWidth="108"
            android:viewportHeight="108">
            <path android:fillColor="#000000"
                android:pathData="M54,27c15,0 27,12 27,27s-12,27 -27,27s-27,-12 -27,-27s12,-27 27,-27zM54,81c15,0 27,-12 27,-27s-12,-27 -27,-27s-27,12 -27,27s12,27 27,27z"/>
            <path android:fillColor="#000000"
                android:pathData="M45,42h12c3,0 6,1.5 6,4.5s-1.5,4.5 -4.5,4.5c3,0 4.5,1.5 4.5,4.5s-3,4.5 -6,4.5h-12v-18zm6,6h6c1.5,0 1.5,-3 0,-3h-6v3zm0,9h6c1.5,0 1.5,-3 0,-3h-6v3z"/>
        </vector>
        EOF
        
        # Background layer (white circle)
        cat > android/app/src/main/res/drawable/ic_launcher_background.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="108dp"
            android:height="108dp"
            android:viewportWidth="108"
            android:viewportHeight="108">
            <path android:fillColor="#FFFFFF"
                android:pathData="M0,0h108v108h-108z"/>
            <path android:fillColor="#F0F0F0"
                android:pathData="M54,20c18.78,0 34,15.22 34,34s-15.22,34 -34,34s-34,-15.22 -34,-34s15.22,-34 34,-34z"/>
        </vector>
        EOF
        
        # Adaptive icon XML
        cat > android/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@drawable/ic_launcher_background"/>
            <foreground android:drawable="@drawable/ic_launcher_foreground"/>
        </adaptive-icon>
        EOF
        
        cat > android/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@drawable/ic_launcher_background"/>
            <foreground android:drawable="@drawable/ic_launcher_foreground"/>
        </adaptive-icon>
        EOF
        
        echo "Icons created successfully"
        
    - name: Configure Android permissions
      run: |
        cd besmi-app
        
        # Add internet permission to AndroidManifest.xml
        cat > android/app/src/main/AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
            
            <application
                android:allowBackup="true"
                android:icon="@mipmap/ic_launcher"
                android:label="@string/app_name"
                android:roundIcon="@mipmap/ic_launcher_round"
                android:theme="@style/AppTheme"
                android:usesCleartextTraffic="true">
                
                <activity
                    android:name=".MainActivity"
                    android:exported="true"
                    android:launchMode="singleTask"
                    android:theme="@style/AppTheme.NoActionBarLaunch">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>
            </application>
        </manifest>
        EOF
        
        echo "Android permissions configured"
        
    - name: Manual web asset placement
      run: |
        cd besmi-app
        
        # Create Android assets directory manually
        mkdir -p android/app/src/main/assets/public
        
        # Copy HTML directly to Android assets
        cp www/index.html android/app/src/main/assets/public/
        
        # Verify the file was copied
        echo "HTML file placed in Android assets successfully"
        ls -la android/app/src/main/assets/public/
        
        # Update strings.xml
        cat > android/app/src/main/res/values/strings.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <string name="app_name">Besmi</string>
            <string name="title_activity_main">Besmi</string>
            <string name="package_name">com.besmi.app</string>
        </resources>
        EOF
        
        echo "Manual asset placement completed successfully"
        
    - name: Build APK
      run: |
        cd besmi-app
        
        # Sync Capacitor (should recognize manually placed assets)
        npx cap sync android
        
        # Verify assets are still there after sync
        echo "Assets after sync:"
        ls -la android/app/src/main/assets/public/ || echo "No public directory found"
        
        # Build
        cd android
        chmod +x gradlew
        ./gradlew assembleDebug --no-daemon
        
        echo "APK built successfully"
        ls -la app/build/outputs/apk/debug/
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: besmi-network-fixed-apk
        path: besmi-app/android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Build completed
      run: |
        echo "Besmi APK with network fixes completed successfully"
        echo "Enhanced connectivity handling with retry mechanism"
        echo "Fallback browser opening for connection issues"
        echo "Proper Android network permissions configured"
